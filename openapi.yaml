---
openapi: 3.1.0
info:
  title: My FastAPI project
  version: 0.1.0
paths:
  "/":
    get:
      summary: Root
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/users/signup":
    post:
      tags:
      - Users
      summary: New User
      operationId: new_user_users_signup_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserCreate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserResponse"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/users":
    put:
      tags:
      - Users
      summary: Upd User
      operationId: upd_user_users_put
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserResponse"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - OAuth2PasswordBearer: []
  "/login":
    post:
      tags:
      - Authentication
      summary: Login For Access Token
      operationId: login_for_access_token_login_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Body_login_for_access_token_login_post"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Token"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/task":
    post:
      tags:
      - Tasks
      summary: New Task
      operationId: new_task_task_post
      security:
      - OAuth2PasswordBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TaskCreate"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Task"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    get:
      tags:
      - Tasks
      summary: Get Tasks Paginated
      operationId: get_tasks_paginated_task_get
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          title: Page
      - name: limit
        in: query
        required: true
        schema:
          type: integer
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Task"
                title: Response Get Tasks Paginated Task Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/task/{task_name}":
    put:
      tags:
      - Tasks
      summary: Upd Task
      operationId: upd_task_task__task_name__put
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: task_name
        in: path
        required: true
        schema:
          type: string
          title: Task Name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TaskUpdate"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Task"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/task/{task_name}/close":
    post:
      tags:
      - Tasks
      summary: Delete Task
      operationId: delete_task_task__task_name__close_post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: task_name
        in: path
        required: true
        schema:
          type: string
          title: Task Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/task/{task_id}":
    get:
      tags:
      - Tasks
      summary: Get Task
      operationId: get_task_task__task_id__get
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
          title: Task Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Task"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    Body_login_for_access_token_login_post:
      properties:
        grant_type:
          anyOf:
          - type: string
            pattern: password
          - type: 'null'
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Client Id
        client_secret:
          anyOf:
          - type: string
          - type: 'null'
          title: Client Secret
      type: object
      required:
      - username
      - password
      title: Body_login_for_access_token_login_post
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Task:
      properties:
        name:
          type: string
          title: Name
        text:
          type: string
          title: Text
        creator_login:
          type: string
          title: Creator Login
        id:
          type: integer
          title: Id
      type: object
      required:
      - name
      - text
      - creator_login
      - id
      title: Task
    TaskCreate:
      properties:
        name:
          type: string
          title: Name
        text:
          type: string
          title: Text
      type: object
      required:
      - name
      - text
      title: TaskCreate
    TaskUpdate:
      properties:
        new_name:
          anyOf:
          - type: string
          - type: 'null'
          title: New Name
        text:
          anyOf:
          - type: string
          - type: 'null'
          title: Text
      type: object
      title: TaskUpdate
    Token:
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
      type: object
      required:
      - access_token
      - token_type
      title: Token
    UserCreate:
      properties:
        login:
          type: string
          title: Login
        password:
          type: string
          title: Password
      type: object
      required:
      - login
      - password
      title: UserCreate
    UserResponse:
      properties:
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        birth_date:
          anyOf:
          - type: string
          - type: 'null'
          title: Birth Date
        email:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
        phone_num:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone Num
        login:
          type: string
          title: Login
      type: object
      required:
      - login
      title: UserResponse
    UserUpdate:
      properties:
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        birth_date:
          anyOf:
          - type: string
          - type: 'null'
          title: Birth Date
        email:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
        phone_num:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone Num
      type: object
      title: UserUpdate
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: login
