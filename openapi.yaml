---
openapi: 3.1.0
info:
  title: My FastAPI project
  version: 0.1.0
paths:
  "/":
    get:
      summary: Root
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/users/sign_up":
    post:
      tags:
      - users
      summary: New User
      operationId: new_user_users_sign_up_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserCreate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/users/{user_login}":
    post:
      tags:
      - users
      summary: Upd User
      operationId: upd_user_users__user_login__post
      parameters:
      - name: user_login
        in: path
        required: true
        schema:
          type: string
          title: User Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdate"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/users/login":
    post:
      tags:
      - users
      summary: Login
      operationId: login_users_login_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserCreate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    User:
      properties:
        login:
          type: string
          title: Login
        password:
          type: string
          title: Password
        id:
          type: integer
          title: Id
        first_name:
          type: string
          title: First Name
        last_name:
          type: string
          title: Last Name
        birth_date:
          type: string
          title: Birth Date
        email:
          type: string
          title: Email
        phone_num:
          type: string
          title: Phone Num
      type: object
      required:
      - login
      - password
      - id
      - first_name
      - last_name
      - birth_date
      - email
      - phone_num
      title: User
    UserCreate:
      properties:
        login:
          type: string
          title: Login
        password:
          type: string
          title: Password
      type: object
      required:
      - login
      - password
      title: UserCreate
    UserUpdate:
      properties:
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        birth_date:
          anyOf:
          - type: string
          - type: 'null'
          title: Birth Date
        email:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
        phone_num:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone Num
      type: object
      title: UserUpdate
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
