# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
# import statistics_pb2 as statistics__pb2
from protos import statistics_pb2 as statistics__pb2


class StatisticsServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStatsOne = channel.unary_unary(
                '/statistics_grpc.StatisticsServer/GetStatsOne',
                request_serializer=statistics__pb2.GetStatsOneRequest.SerializeToString,
                response_deserializer=statistics__pb2.GetStatsOneResponse.FromString,
                )
        self.GetTopTasks = channel.unary_unary(
                '/statistics_grpc.StatisticsServer/GetTopTasks',
                request_serializer=statistics__pb2.GetTopTasksRequest.SerializeToString,
                response_deserializer=statistics__pb2.GetTopTasksResponse.FromString,
                )
        self.GetTopUsers = channel.unary_unary(
                '/statistics_grpc.StatisticsServer/GetTopUsers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=statistics__pb2.GetTopUsersResponse.FromString,
                )


class StatisticsServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStatsOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StatisticsServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStatsOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatsOne,
                    request_deserializer=statistics__pb2.GetStatsOneRequest.FromString,
                    response_serializer=statistics__pb2.GetStatsOneResponse.SerializeToString,
            ),
            'GetTopTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopTasks,
                    request_deserializer=statistics__pb2.GetTopTasksRequest.FromString,
                    response_serializer=statistics__pb2.GetTopTasksResponse.SerializeToString,
            ),
            'GetTopUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopUsers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=statistics__pb2.GetTopUsersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'statistics_grpc.StatisticsServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StatisticsServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStatsOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/statistics_grpc.StatisticsServer/GetStatsOne',
            statistics__pb2.GetStatsOneRequest.SerializeToString,
            statistics__pb2.GetStatsOneResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/statistics_grpc.StatisticsServer/GetTopTasks',
            statistics__pb2.GetTopTasksRequest.SerializeToString,
            statistics__pb2.GetTopTasksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/statistics_grpc.StatisticsServer/GetTopUsers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            statistics__pb2.GetTopUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
